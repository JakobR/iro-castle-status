<Window x:Class="MainWindow" x:Name="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:lib="clr-namespace:iROCastleStatus;assembly=iROCastleStatus"
        xmlns:local="clr-namespace:iROCastleStatus.GUIApplication"
        Title="iRO Castle Status" Width="800" Height="675">
    <Window.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="StretchTreeViewItemStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <HierarchicalDataTemplate DataType="{x:Type lib:Realm}" ItemsSource="{Binding Castles}">
                <TextBlock Text="{Binding Name}" />
            </HierarchicalDataTemplate>
        
            <DataTemplate DataType="{x:Type lib:Castle}">
                <DockPanel LastChildFill="True">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" DockPanel.Dock="Right">
                        <TextBlock.Text>
                            <Binding StringFormat="{}({0})" Path="Breaks.Count" />
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock FontSize="24" x:Name="CastleInfoTextBlock" DockPanel.Dock="Left">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} {1}: ">
                                <Binding Path="Realm.Name" />
                                <Binding Path="Number" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBox Text="{Binding OwningGuild}" MinWidth="120" BorderThickness="0" FontSize="24" Background="Transparent" Foreground="{Binding Foreground,ElementName=CastleInfoTextBlock}" />
                </DockPanel>
            </DataTemplate>
        
            <DataTemplate DataType="{x:Type lib:Castle+Break}">
                <TextBlock FontFamily="Courier New" FontSize="16">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}[{0:00}:{1:00}] {2,10} {3} -- {4}">
                            <Binding Path="Time.Hour" />
                            <Binding Path="Time.Minute" />
                            <Binding Path="Castle.Realm.Name" />
                            <Binding Path="Castle.Number" />
                            <Binding Path="BreakingGuild" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </DataTemplate>
            
            <DataTemplate x:Key="RealmHorizontalTemplate">
                <Expander HorizontalAlignment="Left" VerticalAlignment="Stretch" ExpandDirection="Right" IsExpanded="{Binding IsExpanded}">
                    <Expander.Header>
                        <TextBlock Padding="0,0,5,0">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </TextBlock.LayoutTransform>
                            <TextBlock.Style>
                                <Style>
                                    <Setter Property="TextBlock.Text" Value="{Binding Name}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsExpanded,RelativeSource={RelativeSource FindAncestor,AncestorType=Expander}}" Value="True">
                                            <!-- So cheap... Change this to draw a real line later. -->
                                            <Setter Property="TextBlock.Text" Value="–––––––––––––––––––––––" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Expander.Header>
                    <ItemsControl ItemsSource="{Binding Castles}">
                    </ItemsControl>
                </Expander>
            </DataTemplate>

            <local:CastleAndRealmVisibilityConverter x:Key="CastleAndRealmVisibilityConverter" />

            <x:StaticExtension Member="lib:WoE.iRO" x:Key="iRO" />
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Grid DockPanel.Dock="Bottom" Margin="5">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Collapsed">
                <!-- Maybe use check boxes for this. Maybe even a separate check box for every realm? -->
                <Button x:Name="ShowWoE1" Width="50">WoE 1</Button>
                <Button x:Name="ShowWoE2" Width="50">WoE 2</Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="DebugBreakButton" Width="120" Visibility="Collapsed" Margin="0,0,5,0">Break stuff</Button>
                <CheckBox x:Name="VerticalLayoutCheckBox" IsChecked="False" Margin="0,0,5,0">Vertical layout</CheckBox>
                <CheckBox IsChecked="{Binding Topmost,ElementName=MainWindow}">Stay on top</CheckBox>
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="395" />
            </Grid.ColumnDefinitions>

            <TreeView x:Name="StatusTreeView" Grid.Column="0" ItemsSource="{Binding Realms,Source={StaticResource iRO}}">
                <TreeView.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=VerticalLayoutCheckBox}" Value="True">
                                <Setter Property="TreeView.Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=VerticalLayoutCheckBox}" Value="False">
                                <Setter Property="TreeView.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.Style>
                <TreeView.Resources>
                    <local:ObjectTypeConverter x:Key="ObjectTypeConverter" />
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource StretchTreeViewItemStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Converter={StaticResource ObjectTypeConverter}}" Value="{x:Type lib:Realm}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="{Binding Converter={StaticResource CastleAndRealmVisibilityConverter}}" />
                        <Setter Property="Focusable" Value="False" />
                    </Style>
                </TreeView.Resources>
            </TreeView>

            <ItemsControl Grid.Column="0" ItemTemplate="{StaticResource RealmHorizontalTemplate}" ItemsSource="{Binding Realms,Source={StaticResource iRO}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal" UseLayoutRounding="True" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=VerticalLayoutCheckBox}" Value="True">
                                <Setter Property="ItemsControl.Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=VerticalLayoutCheckBox}" Value="False">
                                <Setter Property="ItemsControl.Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
                <ItemsControl.Resources>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Visibility" Value="{Binding Converter={StaticResource CastleAndRealmVisibilityConverter}}" />
                        <Setter Property="Focusable" Value="False" />
                    </Style>
                </ItemsControl.Resources>
            </ItemsControl>

            <GridSplitter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5" ShowsPreview="False" />

            <ListView x:Name="BreakLogListView" Grid.Column="2" ItemsSource="{Binding AllCastleBreaks,Source={StaticResource iRO}}" />

        </Grid>
    </DockPanel>
</Window>
