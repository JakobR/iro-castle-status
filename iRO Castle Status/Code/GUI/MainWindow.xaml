<Window x:Class="MainWindow" x:Name="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:iROCastleStatus"
        Title="iRO Castle Status" Width="800" Height="675">
    <Window.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Helpers/StretchTreeViewItemStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <HierarchicalDataTemplate DataType="{x:Type local:Realm}" ItemsSource="{Binding Castles}">
                <TextBlock Text="{Binding Name}" />
            </HierarchicalDataTemplate>
        
            <DataTemplate DataType="{x:Type local:Castle}">
                <DockPanel LastChildFill="True">
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" DockPanel.Dock="Right">
                        <TextBlock.Text>
                            <Binding StringFormat="{}({0})" Path="Breaks.Count" />
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock FontSize="24" x:Name="CastleInfoTextBlock" DockPanel.Dock="Left">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} {1}: ">
                                <Binding Path="Realm.Name" />
                                <Binding Path="Number" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBox Text="{Binding OwningGuild}" MinWidth="120" BorderThickness="0" FontSize="24" Background="Transparent" Foreground="{Binding Foreground,ElementName=CastleInfoTextBlock}" />
                </DockPanel>
            </DataTemplate>
        
            <DataTemplate DataType="{x:Type local:Castle+Break}">
                <TextBlock FontFamily="Courier New" FontSize="16">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}[{0:00}:{1:00}] {2,10} {3} -- {4}">
                            <Binding Path="Time.Hour" />
                            <Binding Path="Time.Minute" />
                            <Binding Path="Castle.Realm.Name" />
                            <Binding Path="Castle.Number" />
                            <Binding Path="BreakingGuild" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </DataTemplate>
            
            <DataTemplate x:Key="RealmHorizontalTemplate">
                <Expander HorizontalAlignment="Left" VerticalAlignment="Stretch" ExpandDirection="Right" IsExpanded="{Binding IsExpanded}">
                    <Expander.Header>
                        <TextBlock Padding="0,0,5,0">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </TextBlock.LayoutTransform>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextBlock.Text" Value="{Binding Name}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsExpanded,RelativeSource={RelativeSource FindAncestor,AncestorType=Expander}}" Value="True">
                                            <!-- So cheap... Change this to draw a real line later. -->
                                            <Setter Property="Text" Value="–––––––––––––––––––––––" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Expander.Header>
                    <ItemsControl ItemsSource="{Binding Castles}">
                    </ItemsControl>
                </Expander>
            </DataTemplate>

            <local:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter" />

            <x:StaticExtension Member="local:WoE.iRO" x:Key="iRO" />
        </ResourceDictionary>
    </Window.Resources>
    <!--<Window.ContextMenu>
         <ContextMenu>
         <ContextMenu.Resources>
         <x:StaticExtension Member="local:WoE.iRO" x:Key="iRO" />
         </ContextMenu.Resources>
         <ContextMenu.ItemsSource>
         <CompositeCollection>
         <CollectionContainer Collection="{Binding Realms,Source={StaticResource iRO}}" />
         <MenuItem Header="Invert" Click="InvertRealmEnabled" />
         <Separator />
         <MenuItem Header="Vertical layout" IsCheckable="True" IsChecked="{Binding IsChecked,ElementName=VerticalLayoutCheckBox,Mode=TwoWay}" />
         <MenuItem Header="Stay on top" IsCheckable="True" IsChecked="{Binding Path=PlacementTarget.Topmost, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
         </CompositeCollection>
         </ContextMenu.ItemsSource>
         <ContextMenu.ItemContainerStyle>
         <Style>
         <Style.Resources>
         <local:ObjectTypeConverter x:Key="ObjectTypeConverter" />
         </Style.Resources>
         <Style.Triggers>
         <DataTrigger Binding="{Binding Converter={StaticResource ObjectTypeConverter}}" Value="{x:Type local:Realm}">
         <Setter Property="MenuItem.Header" Value="{Binding Name}" />
         <Setter Property="MenuItem.IsCheckable" Value="True" />
         <Setter Property="MenuItem.IsChecked" Value="{Binding IsEnabled,Mode=TwoWay}" />
         </DataTrigger>
         </Style.Triggers>
         </Style>
         </ContextMenu.ItemContainerStyle>
         </ContextMenu>
         </Window.ContextMenu>-->
    <DockPanel LastChildFill="True">
        <Grid DockPanel.Dock="Bottom">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Show:</TextBlock>
                <ItemsControl Grid.Column="0" ItemsSource="{Binding Realms,Source={StaticResource iRO}}" VerticalAlignment="Center">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Margin="0,0,5,0" IsChecked="{Binding IsEnabled}">
                                <CheckBox.Content>
                                    <TextBlock Text="{Binding Name}" />
                                </CheckBox.Content>
                            </CheckBox>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Button Margin="5,0,5,0" VerticalAlignment="Center" Click="InvertRealmEnabled">Invert selection</Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                <Button x:Name="DebugBreakButton" Visibility="Collapsed" Margin="0,0,5,0" VerticalAlignment="Center">Break stuff</Button>
                <CheckBox x:Name="HorizontalLayoutCheckBox" IsChecked="False" Margin="0,0,5,0" VerticalAlignment="Center">Horizontal layout</CheckBox>
                <CheckBox IsChecked="{Binding Topmost,ElementName=MainWindow}" VerticalAlignment="Center">Stay on top</CheckBox>
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition x:Name="BreakLogColumn" Width="395" />
            </Grid.ColumnDefinitions>

            <TreeView x:Name="StatusTreeView" Grid.Column="0" ItemsSource="{Binding Realms,Source={StaticResource iRO}}">
                <TreeView.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=HorizontalLayoutCheckBox}" Value="True">
                                <Setter Property="TreeView.Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=HorizontalLayoutCheckBox}" Value="False">
                                <Setter Property="TreeView.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.Style>
                <TreeView.Resources>
                    <local:ObjectTypeConverter x:Key="ObjectTypeConverter" />
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource StretchTreeViewItemStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Converter={StaticResource ObjectTypeConverter}}" Value="{x:Type local:Realm}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="{Binding IsEnabled,Converter={StaticResource BooleanVisibilityConverter}}" />
                        <Setter Property="Focusable" Value="False" />
                    </Style>
                </TreeView.Resources>
            </TreeView>

            <ItemsControl Grid.Column="0" ItemTemplate="{StaticResource RealmHorizontalTemplate}" ItemsSource="{Binding Realms,Source={StaticResource iRO}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal" UseLayoutRounding="True" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Style>
                    <Style TargetType="{x:Type ItemsControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=HorizontalLayoutCheckBox}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=HorizontalLayoutCheckBox}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
                <ItemsControl.Resources>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Visibility" Value="{Binding IsEnabled,Converter={StaticResource BooleanVisibilityConverter}}" />
                        <Setter Property="Focusable" Value="False" />
                    </Style>
                </ItemsControl.Resources>
            </ItemsControl>

            <GridSplitter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5" ShowsPreview="False" />

            <ListView x:Name="BreakLogListView" Grid.Column="2" ItemsSource="{Binding AllCastleBreaks,Source={StaticResource iRO}}" />

        </Grid>
    </DockPanel>
</Window>
